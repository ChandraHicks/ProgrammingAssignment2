swirl()
source(swirl()
)
install.packages("swirl"); library(swirl); install_from_swirl("R Programming");swirl()
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_list<-sapply(flags,class)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
lapply(flags,unique)
uniquevals<-lapply(flags,unique)
unique_vals<-lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2]))
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
sapply(flags,class,character(1))
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
library(datasets)
data(iris)
iris
head(iris)
?iris
tapply(iris$Sepal.Length,iris$Species,mean)
colmeans(iris)
colMeans(iris)
?apply
apply(iris,2,mean)
apply(iris[,1:4],2,mean)
apply(iris[,1:4],1,mean)
library(datasets)
data(mtcars)
head(mtcars)
?mtcars
dim(mtcars)
names(mtcars)
rownames(mtcars)
tapply(mtcars$mpg,mtcars$cyl,mean)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
split(mtcars,mtcars$cyl)
mean(mtcars$mpg,mtcars$cyl)
with(mtcars,tapply(mpg,cyl,mean))
sapply(mtcars,cyl,mean)
tapply(mtcars$hp,mtcars$cyl,mean)
=209.21429-82.63636
209.21429-82.63636
209-83
debug(ls
)
?debug
n
debug()
q
setwd("~/Documents/DataScientistsToolBox/WDforCoursera/C2W3HW/ProgrammingAssignment2")
source('~/Documents/DataScientistsToolBox/WDforCoursera/C2W3HW/ProgrammingAssignment2/cachematrix.R')
testmatrix <- c(1:9,3,3)
testmatrix
testmatrix <- c(matrix(1:9,3,3)
)
testmatrix
matrix(1:9,3,3)
testmatrix <- matrix(1:9,3,3)
testmatrix
cacheSolve(testmatrix)
source('~/Documents/DataScientistsToolBox/WDforCoursera/C2W3HW/ProgrammingAssignment2/cachematrix.R')
cacheSolve(testmatrix)
makeCacheMatrix(testmatrix)
makeCacheMatrix(testmatrix)
blah<-makeCacheMatrix(testmatrix)
blah
testmatrix
blah<-makeCacheMatrix(testmatrix)
blah
blah2<-cacheSolve(blah)
blah2<-cacheSolve(blah)
blah2<-cacheSolve(blah)
